import { useEffect } from 'react';
import { useUserContext } from '../context/userContext'; 
import { refreshTokenApi } from '../api/refreshApi'; 

const TokenVerifier = () => {
  const { setUserProperties } = useUserContext(); // Access setUserProperties from context

  useEffect(() => {
    const token = sessionStorage.getItem('token');
    if (token) {
      const controller = new AbortController();
      const signal = controller.signal;

      // Function to verify and refresh user data
      const verifyToken = async () => {
        try {
          const user = await refreshTokenApi(token, signal);
          if (user) {
            setUserProperties(user); // Set user properties in context
          }
        } catch (error) {
          console.error('Error refreshing token:', error);
        }
      };

      verifyToken();
    }
  }, [setUserProperties]);

  return null; // This component doesn't render anything
};

export default TokenVerifier;
